import asyncio
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters.command import Command
from aiogram.types import ReplyKeyboardRemove
from aiogram.utils.keyboard import ReplyKeyboardBuilder

bot = Bot(token="7772565207:AAFh4Oz0U7xerYRIV-bUYviMW3BD2lvyHa4")
dp = Dispatcher()

@dp.message(Command("start"))
async def send_welcome(message: types.Message):
    builder = ReplyKeyboardBuilder()
    questions = [
        "–ö–∞–∫ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –≤—É–∑–µ?",
        "–ì–¥–µ –∏—Å–∫–∞—Ç—å –¥—Ä—É–∑–µ–π –∏ —Ç—É—Å–æ–≤–∫–∏?",
        "–ö–∞–∫ –Ω–µ –≤—ã–≥–æ—Ä–µ—Ç—å?",
        "–°–æ–≤–µ—Ç—ã –ø–æ —É—á—ë–±–µ",
        "–ß–µ–º –∑–∞–Ω—è—Ç—å—Å—è –ø–æ—Å–ª–µ –ø–∞—Ä?"
    ]
    for question in questions:
        builder.add(types.KeyboardButton(text=question))
    builder.adjust(2)
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –ø–µ—Ä–≤–æ–∫—É—Ä—Å–Ω–∏–∫–∞ üéì\n"
        "–í—ã–±–µ—Ä–∏ –≤–æ–ø—Ä–æ—Å, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç üëá",
        reply_markup=builder.as_markup()
    )

@dp.message(Command("exit"))
async def send_goodbye(message: types.Message):
    await message.answer("–ü–æ–∫–∞! –ï—Å–ª–∏ —á—Ç–æ ‚Äî –ø–∏—à–∏ üí¨", reply_markup=ReplyKeyboardRemove())

@dp.message(F.text.lower() == "–∫–∞–∫ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –≤—É–∑–µ?")
async def adapt(message: types.Message):
    await message.answer("–î–∞–π —Å–µ–±–µ –≤—Ä–µ–º—è –ø—Ä–∏–≤—ã–∫–Ω—É—Ç—å. –•–æ–¥–∏ –Ω–∞ –ø–∞—Ä—ã, –æ–±—â–∞–π—Å—è, —É—á–∞—Å—Ç–≤—É–π –≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö ‚Äî —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º –≤—Å—ë —Å—Ç–∞–Ω–µ—Ç –ø—Ä–∏–≤—ã—á–Ω—ã–º.")

@dp.message(F.text.lower() == "–≥–¥–µ –∏—Å–∫–∞—Ç—å –¥—Ä—É–∑–µ–π –∏ —Ç—É—Å–æ–≤–∫–∏?")
async def social_life(message: types.Message):
    await message.answer("–ó–∞–≥–ª—è–Ω–∏ –≤ —Å—Ç—É–¥—Å–æ–≤–µ—Ç, –∫—Ä—É–∂–∫–∏ –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º, –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è. –ê –µ—â—ë ‚Äî –Ω–µ –±–æ–π—Å—è –ø–µ—Ä–≤—ã–º –Ω–∞—á–∞—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä üòä")

@dp.message(F.text.lower() == "–∫–∞–∫ –Ω–µ –≤—ã–≥–æ—Ä–µ—Ç—å?")
async def burnout(message: types.Message):
    await message.answer("–î–µ–ª–∞–π –ø–µ—Ä–µ—Ä—ã–≤—ã, –Ω–µ –∑–∞–±—ã–≤–∞–π –æ —Å–Ω–µ –∏ –æ—Ç–¥—ã—Ö–µ. –°–ø–æ—Ä—Ç, –ø—Ä–æ–≥—É–ª–∫–∏ –∏ —Ö–æ–±–±–∏ ‚Äî –æ—Ç–ª–∏—á–Ω–∞—è –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞ –≤—ã–≥–æ—Ä–∞–Ω–∏—è.")

@dp.message(F.text.lower() == "—Å–æ–≤–µ—Ç—ã –ø–æ —É—á—ë–±–µ")
async def study_tips(message: types.Message):
    await message.answer("–ó–∞–≤–µ–¥–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—å –¥–µ–¥–ª–∞–π–Ω–æ–≤, —Ä–∞–∑–±–∏–≤–∞–π –∑–∞–¥–∞—á–∏ –Ω–∞ –º–µ–ª–∫–∏–µ —à–∞–≥–∏ –∏ –Ω–µ –±–æ–π—Å—è –ø—Ä–æ—Å–∏—Ç—å –ø–æ–º–æ—â–∏ —É –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –∏–ª–∏ —Å—Ç–∞—Ä—à–µ–∫—É—Ä—Å–Ω–∏–∫–æ–≤.")

@dp.message(F.text.lower() == "—á–µ–º –∑–∞–Ω—è—Ç—å—Å—è –ø–æ—Å–ª–µ –ø–∞—Ä?")
async def after_classes(message: types.Message):
    await message.answer("–ü–æ–≥—É–ª—è–π —Å –¥—Ä—É–∑—å—è–º–∏, —Å—Ö–æ–¥–∏ –≤ —Å–ø–æ—Ä—Ç–∑–∞–ª, –ø–æ—Å–º–æ—Ç—Ä–∏ –∫–∏–Ω–æ –∏–ª–∏ –Ω–∞—á–Ω–∏ –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç. –£—á—ë–±–∞ ‚Äî –Ω–µ –≤—Å—è –∂–∏–∑–Ω—å üòâ")

async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())
